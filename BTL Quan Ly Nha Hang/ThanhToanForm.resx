<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnThanhToan.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        cwAAAHMBY8FD/gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAMJSURBVEhLtZLL
        TxNRFIe7cGN0o+78B9w1JFpCqUBbpLTFIKiIDzQad8QYCChFoW2Ij6StCIZS+6C1AirRWmwZwsKEhULL
        w447lcQSIDGI0QVI5NHp8d42M0w7l0oXLr7MzL1zft/MOVek6KbPK230HGItOyLrxV3TsUJLGApMYSiy
        hDeKOiZvAoCIj6jYRn9DBdDg6YcWrwsuOkcAP2+Hxk1DiYMGlSMCJV2TOBiOWSeQJASFlollgQAXNbuf
        ABMQAzMkhp/+o8RglmofDWUeGo67p+Bk/zQoOyfg9MCHpMAcjhEFXlsrMBYkGBBDzJRDDGZRWCPoS3Fb
        QgLk5lCcKLjqCsDvYC4wlBgivjPEYEymcEyRaRx+uOvLBYKd8K9wDBaEGio3gTIoUwR4aGXe5FWL+ovh
        r+HBqmyTxFA+WGA9IQEkWEUoOIHKRUN5HwpzouE9TcKt2SOgdU2Bxp48KRc638KnV+0w99oEtx8PCgT9
        miOw8QydVsrwHXEgY4sSbTGntsXf24OLEzCUEdocPm5PjgRRbT780tew71gTAtySs/5kK0jh+BjiI4nv
        H7lecIJ0CSuYr0YjSO5/xgKGDeWHF2wz0GLLGHx82UGUKMxjCcFclZzdi4uU3ZHATsNZ1JZ3MON7IJB4
        uu2wUFMCfxzXuXWRtH1897VGk+dy7Q3AVDV2QKXODqcQl3QOqG12Qn1zj4BWgwOWfHdSJLE3LbDyvB7i
        Qf2WgD2vd0tzNnSlYniozoERjQS+aKWJ383E/DnlTDzQusaXbA7egtWBBqEgoM51RTR5xKA0lhHOWY0s
        D4Z0+1AIw4ZxDG3dc4L5ctlBVBjjBaUhe/9Vm39lUaXaw9ZAUF+ZEkyAE2BQgD8teDGqlZqiatkh/nsc
        lPEeKZRPSsFCqXQ/+lJvtCy/b1YjrRiVy3fx9wUMGytIoXzIhTtl1LgX/UXKkNMhF2ZBbFjfF6cMS4h1
        BINhKH1shWpawhCLsuF+UFKHgO0gFmUDCqlr8x+Gpl7x/xOkh/IhFmUDCskgkMBfm6QpM/mHKfgAAAAA
        SUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAALsBAAC7AQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUJBwFBCAcBKxYSAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACAYBAAAAABclHAOESzwF7S4kArIAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABAMAUFGMga/dlUH/V9OEv8yMibZAgQIOQAAAB0CAgIqAgMDLAAAABUAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAnHAOfbk8J/2hYMf+Ek6L/nrbR/XiKnupvf5HgeIqe6HuNoelldIXQPUZRkQ4Q
        EzAAAAAAAAAAAAAAAAAAAAAAEQwALRwVBZR1g5Dvzeb9/8fh/f/I4v7/yuT//8vl//+ftMr/gZOn/Yue
        s/9kcoLeHyQpUgAAAAIAAAAAAAAAAAAAAAUAAAAOKzA1houcrPu91Or/r8PY/46fsP6Vprj+hJOj/yMn
        K8EhJix/VmJv3FJebOoRFBdNAAAACQAAAAdBQUGuZ2dnw2BgYMtcXV74dHh9/2Voa/9SUlP8VFVW/mRm
        af9dXl/pY2NiwFdXV95hY2b/XV5f3WdnZ8NBQUGuQEBAs2ZmZvCmpqb/rKyr/4WFhP+Hh4f/iIiI/4iI
        iP+Hh4f/h4eH/4eHh/+Hh4f/hoaG/4ODg/9nZ2fwQUFBsgAAAApPT0+l19fX/+fn5//f39//39/f/9/f
        3//f39//39/f/9/f3//f39//39/f/9vb2//FxcX/S0tLpQAAAApvb28ANTU1bMXFxf/y8vL/8PDw//Dw
        8P/w8PD/8PDw//Dw8P/w8PD/8PDw//Dw8P/q6ur/vb29/jQ0NGxsbGwADAwMAAAAACSDg4PZ7Ozs/+/v
        7//v7+//7+/v/+/v7//v7+//7+/v/+/v7//t7e3/4uLi/7KyssQkJCQbLS0tAAAAAAD///8ALy8vZaen
        p/Tv7+//8PDw/+/v7//v7+//7+/v/+/v7//v7+//5ubm/52dnfQ8PDxdVFRUAEZGRgAAAAAAAQEBAAAA
        AAc2NjZ0mJiY7N3d3f/w8PD/8vLy//Ly8v/u7u7/1NTU/42NjesyMjJyAAAABgEBAQAAAAAAAAAAAAAA
        AAAAAAAAAAAABBoaGkJYWFilioqK4KSkpP2goKD9g4OD3lFRUaMYGBhAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAD1NTU3kTU1N5AAAADsAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDAwAAAAAJIiIiTSIiIk0AAAAJAwMDAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx/8AAIP/AAAAHwAAAAcAAAADAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIABAADAAwAAwAMAAOAH
        AAD4HwAA/D8AAA==
</value>
  </data>
</root>